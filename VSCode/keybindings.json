[
  {
    "key": "shift+cmd+r",
    "command": "-rerunSearchEditorSearch",
    "when": "inSearchEditor"
  },
  {
    "key": "shift+cmd+a",
    "command": "-notification.acceptPrimaryAction",
    "when": "notificationToastsVisible"
  },
  {
    "key": "shift+cmd+s",
    "command": "-workbench.action.files.saveAs"
  },
  {
    "key": "shift+cmd+s",
    "command": "-workbench.action.files.saveLocalFile",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "shift+cmd+t",
    "command": "-workbench.action.reopenClosedEditor"
  },
  {
    "key": "shift+cmd+l",
    "command": "lntoggle.toggle"
  },
  {
    "key": "ctrl+shift+l",
    "command": "-lntoggle.toggle"
  },
  {
    "key": "shift+cmd+l",
    "command": "-selectAllSearchEditorMatches",
    "when": "inSearchEditor"
  },
  {
    "key": "shift+cmd+l",
    "command": "-editor.action.selectHighlights",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+l",
    "command": "-addCursorsAtSearchResults",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "key": "shift+cmd+h",
    "command": "-workbench.action.replaceInFiles"
  },
  {
    "key": "ctrl+alt+down",
    "command": "editor.emmet.action.balanceIn"
  },
  {
    "key": "ctrl+alt+up",
    "command": "editor.emmet.action.balanceOut"
  },
  {
    "key": "cmd+g m",
    "command": "editor.emmet.action.matchTag"
  },
  {
    "key": "shift+cmd+backspace",
    "command": "editor.emmet.action.removeTag"
  },
  {
    "key": "shift+cmd+u",
    "command": "editor.emmet.action.updateTag"
  },
  {
    "key": "shift+cmd+u",
    "command": "-workbench.action.output.toggleOutput",
    "when": "workbench.panel.output.active"
  },
  {
    "key": "shift+cmd+w",
    "command": "editor.emmet.action.wrapWithAbbreviation"
  },
  {
    "key": "shift+cmd+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "cmd+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "cmd+r",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "f2",
    "command": "-editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+c",
    "command": "copyFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "alt+cmd+c",
    "command": "-copyFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "shift+cmd+c",
    "command": "copyFilePath",
    "when": "editorFocus"
  },
  {
    "key": "cmd+k alt+cmd+c",
    "command": "-copyFilePath",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "cmd+n",
    "command": "explorer.newFile"
  },
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "shift+cmd+n",
    "command": "explorer.newFolder"
  },
  {
    "key": "shift+cmd+n",
    "command": "-workbench.action.newWindow"
  },
  {
    "key": "shift+cmd+b",
    "command": "-workbench.action.tasks.build",
    "when": "taskCommandsRegistered"
  },
  {
    "key": "alt+space",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
  },
  {
    "key": "alt+space",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+k cmd+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+k cmd+i",
    "command": "-workbench.action.showTreeHover",
    "when": "customTreeView && listFocus && !inputFocus"
  },
  {
    "key": "shift+space",
    "command": "editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "shift+cmd+space",
    "command": "-editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "home",
    "command": "editor.createFoldingRangeFromSelection",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+,",
    "command": "-editor.createFoldingRangeFromSelection",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "home",
    "command": "-editor.action.goToTopHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "home",
    "command": "-cursorHome",
    "when": "textInputFocus"
  },
  {
    "key": "home",
    "command": "-firstCompressedFolder",
    "when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus"
  },
  {
    "key": "home",
    "command": "-list.focusFirst",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "home",
    "command": "-notifications.focusFirstToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "home",
    "command": "-workbench.statusBar.focusFirst",
    "when": "statusBarFocused"
  },
  {
    "key": "shift+cmd+home",
    "command": "editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+j",
    "command": "-editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "shift+enter",
    "command": "editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+enter",
    "command": "-editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+g d",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+g i",
    "command": "editor.action.goToImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+f12",
    "command": "-editor.action.goToImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+g",
    "command": "workbench.action.gotoLine"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "cmd+e",
    "command": "editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "alt+f8",
    "command": "-editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "cmd+g r",
    "command": "editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "shift+f12",
    "command": "-editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+g o",
    "command": "workbench.action.showAllSymbols"
  },
  {
    "key": "cmd+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "cmd+g t",
    "command": "editor.action.goToTypeDefinition"
  },
  {
    "key": "ctrl+shift+up",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+right",
    "command": "-editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+down",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+left",
    "command": "-editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+j",
    "command": "editor.action.joinLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+j",
    "command": "-editor.action.joinLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+k s",
    "command": "editor.action.sortLinesAscending"
  },
  {
    "key": "ctrl+cmd+e",
    "command": "workbench.files.action.showActiveFileInExplorer"
  },
  {
    "key": "cmd+k a",
    "command": "workbench.files.action.collapseExplorerFolders"
  },
  {
    "key": "shift+alt+n",
    "command": "workbench.action.newWindow"
  },
  {
    "key": "cmd+k m",
    "command": "-workbench.action.editor.changeLanguageMode",
    "when": "!notebookEditorFocused"
  },
  {
    "key": "cmd+k m",
    "command": "markdown.showPreview",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "shift+cmd+v",
    "command": "-markdown.showPreview",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "shift+cmd+g",
    "command": "-workbench.action.terminal.findPrevious",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+g",
    "command": "-editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+i",
    "command": "-chat.action.askQuickQuestion",
    "when": "config.chat.experimental.quickQuestion.enable && hasChatProvider"
  },
  {
    "key": "shift+backspace",
    "command": "deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+delete",
    "command": "-deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenView"
  },
  {
    "key": "shift+cmd+backspace",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "alt+/",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+p",
    "command": "workbench.action.pinEditor",
    "when": "!activeEditorIsPinned"
  },
  {
    "key": "cmd+k shift+enter",
    "command": "-workbench.action.pinEditor",
    "when": "!activeEditorIsPinned"
  },
  {
    "key": "cmd+k shift+enter",
    "command": "-workbench.action.unpinEditor",
    "when": "activeEditorIsPinned"
  },
  {
    "key": "ctrl+=",
    "command": "editor.emmet.action.incrementNumberByOne"
  },
  {
    "key": "ctrl+-",
    "command": "editor.emmet.action.decrementNumberByOne"
  },
  {
    "key": "ctrl+-",
    "command": "-workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "ctrl+-",
    "command": "-workbench.action.quickInputBack",
    "when": "inQuickOpen"
  },
  {
    "key": "cmd+/",
    "command": "-toggleExplainMode",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "cmd+r",
    "command": "workbench.action.terminal.rename",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+cmd+i",
    "command": "-workbench.panel.chatSidebar.copilot"
  },
  {
    "key": "shift+cmd+g",
    "command": "-workbench.action.terminal.navigateAccessibleBuffer",
    "when": "terminalAccessibleBufferFocus && terminalHasBeenCreated || terminalAccessibleBufferFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "shift+cmd+b",
    "command": "breadcrumbs.toggle"
  },
  {
    "key": "shift+cmd+y",
    "command": "-workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "cmd+0",
    "command": "workbench.action.zoomReset"
  },
  {
    "key": "cmd+numpad0",
    "command": "-workbench.action.zoomReset"
  },
  {
    "key": "cmd+0",
    "command": "-workbench.action.focusSideBar"
  },
  {
    "key": "alt+1",
    "command": "git.stageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "cmd+k alt+cmd+s",
    "command": "-git.stageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "alt+2",
    "command": "git.unstageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "cmd+k cmd+n",
    "command": "-git.unstageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "shift+alt+cmd+down",
    "command": "-cursorColumnSelectDown",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+cmd+up",
    "command": "-cursorColumnSelectUp",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+cmd+up",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+cmd+down",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+down",
    "command": "-editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+p",
    "command": "workbench.action.unpinEditor",
    "when": "activeEditorIsPinned"
  },
  {
    "key": "cmd+]",
    "command": "-editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+]",
    "command": "workbench.action.nextPanelView",
    "when": "panelVisible"
  },
  {
    "key": "shift+cmd+[",
    "command": "workbench.action.previousPanelView",
    "when": "panelVisible"
  },
  {
    "key": "cmd+[",
    "command": "-editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+shift+-",
    "command": "editor.emmet.action.decrementNumberByTen"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  {
    "key": "ctrl+shift+=",
    "command": "editor.emmet.action.incrementNumberByTen"
  },
  {
    "key": "shift+cmd+s",
    "command": "workbench.action.toggleStatusbarVisibility"
  },
  {
    "key": "shift+cmd+e",
    "command": "workbench.explorer.fileView.focus"
  },
  {
    "key": "shift+cmd+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "cmd+m",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "cmd+j",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "cmd+g m",
    "command": "editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+\\",
    "command": "-editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+k shift+cmd+left",
    "command": "-workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "cmd+k shift+cmd+right",
    "command": "-workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "shift+cmd+j",
    "command": "rust-analyzer.joinLines",
    "when": "editorTextFocus && editorLangId == 'rust'"
  },
  {
    "key": "ctrl+shift+j",
    "command": "-rust-analyzer.joinLines",
    "when": "editorTextFocus && editorLangId == 'rust'"
  },
  {
    "key": "shift+cmd+t",
    "command": "workbench.action.hideEditorTabs",
    "when": "editorTabsVisible"
  },
  {
    "key": "shift+cmd+t",
    "command": "workbench.action.showMultipleEditorTabs",
    "when": "!editorTabsVisible"
  },
  {
    "key": "shift+cmd+\\",
    "command": "-workbench.action.terminal.focusTabs",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.terminal.focus",
    "when": "accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "cmd+down",
    "command": "-workbench.action.terminal.focus",
    "when": "accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "shift+cmd+i",
    "command": "-workbench.action.quickchat.toggle",
    "when": "hasChatProvider"
  },
  {
    "key": "ctrl+r",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "alt+0",
    "command": "git.unstageAll"
  },
  {
    "key": "shift+cmd+y",
    "command": "workbench.panel.chat.view.copilot.focus"
  },
  {
    "key": "shift+cmd+0",
    "command": "workbench.action.evenEditorWidths"
  },
  {
    "key": "ctrl+cmd+v",
    "command": "toggleVim"
  },
  {
    "key": "cmd+e",
    "command": "-editor.action.toggleScreenReaderAccessibilityMode",
    "when": "accessibilityHelpIsShown"
  },
  {
    "key": "cmd+e",
    "command": "-actions.findWithSelection"
  },
  {
    "key": "ctrl+shift+right",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "alt+cmd+right",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "ctrl+shift+left",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "alt+cmd+left",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "shift+cmd+=",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "shift+cmd+=",
    "command": "workbench.action.navigateToLastEditLocation"
  },
  {
    "key": "cmd+k cmd+q",
    "command": "-workbench.action.navigateToLastEditLocation"
  },
  {
    "key": "shift+cmd+g",
    "command": "-workbench.action.terminal.findPrevious",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+g",
    "command": "-workbench.action.terminal.openDetectedLink",
    "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "shift+alt+cmd+enter",
    "command": "git.commit",
    "when": "!operationInProgress"
  },
  {
    "key": "shift+alt+cmd+backspace",
    "command": "git.revertSelectedRanges",
    "when": "!operationInProgress"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "cmd+t",
    "command": "workbench.action.createTerminalEditor"
  },
  {
    "key": "ctrl+z",
    "command": "workbench.action.navigateBackInNavigationLocations"
  },
  {
    "key": "ctrl+shift+`",
    "command": "workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "cmd+]",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "cmd+[",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "shift+cmd+[",
    "command": "-workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "shift+cmd+o",
    "command": "-editor.action.accessibleViewGoToSymbol",
    "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
  },
  {
    "key": "shift+cmd+o",
    "command": "-workbench.action.terminal.openDetectedLink",
    "when": "terminalFocus && terminalHasBeenCreated"
  },
  {
    "key": "shift+cmd+i",
    "command": "-workbench.action.chat.openEditSession",
    "when": "chatEditingParticipantRegistered && view != 'workbench.panel.chat.view.edits'"
  },
  {
    "key": "shift+cmd+i",
    "command": "-workbench.panel.chatEditing",
    "when": "workbench.panel.chat.view.edits.active"
  },
  {
    "key": "shift+cmd+r",
    "command": "-workbench.view.extension.thunder-client",
    "when": "viewContainer.workbench.view.extension.thunder-client.enabled"
  },
  {
    "key": "shift+cmd+t",
    "command": "-mergeEditor.toggleBetweenInputs",
    "when": "isMergeEditor"
  },
  {
    "key": "alt+cmd+p",
    "command": "-postman-for-vscode.sidebar-panel.focus"
  },
  {
    "key": "cmd+r cmd+n",
    "command": "-postman-for-vscode.request.open",
    "when": "postman-for-vscode:sign-in && postman-for-vscode:workspaceId:isSet && !postman-for-vscode:block-workspace-level-commands"
  },
  {
    "key": "shift+cmd+i",
    "command": "outline.focus"
  },
  {
    "key": "shift+cmd+i",
    "command": "-workbench.action.chat.openAgent",
    "when": "config.chat.agent.enabled && !chatSetupDisabled && !chatSetupHidden"
  },
  {
    "key": "shift+cmd+h",
    "command": "workbench.view.extension.github-actions",
    "when": "viewContainer.workbench.view.extension.github-actions.enabled"
  },
  {
    "key": "shift+cmd+g",
    "command": "workbench.scm.focus"
  },
  {
    "key": "shift+cmd+a",
    "command": "-notification.acceptPrimaryAction",
    "when": "notificationFocus || notificationToastsVisible"
  },
  {
    "key": "shift+cmd+a",
    "command": "-workbench.action.chat.focusConfirmation",
    "when": "accessibilityModeEnabled && chatIsEnabled"
  },
  {
    "key": "shift+cmd+a",
    "command": "workbench.action.toggleActivityBarVisibility"
  }
]
